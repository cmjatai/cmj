# Generated by Django 5.2.3 on 2025-09-30 13:27

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('parlamentares', '0051_filiacao_autor_alter_filiacao_parlamentar'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Evento')),
                ('description', models.TextField(blank=True, verbose_name='Descrição do Evento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('duration', models.DurationField(help_text='Duração total planejada do evento')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Cronometro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration', models.DurationField(help_text='Duração planejada do cronômetro')),
                ('state', models.CharField(choices=[('stopped', 'Parado'), ('running', 'Executando'), ('paused', 'Pausado'), ('finished', 'Finalizado')], default='stopped', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('paused_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('pause_parent_on_start', models.BooleanField(default=False, help_text='Pausar o cronômetro pai quando este iniciar')),
                ('accumulated_time', models.DurationField(default=datetime.timedelta(0))),
                ('object_id', models.PositiveIntegerField(blank=True, default=None, null=True)),
                ('content_type', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='painelset.cronometro')),
            ],
            options={
                'verbose_name': 'Cronômetro',
                'verbose_name_plural': 'Cronômetros',
                'ordering': ['created_at'],
                'unique_together': {('content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='CronometroEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('started', 'Iniciado'), ('paused', 'Pausado'), ('resumed', 'Retomado'), ('stopped', 'Parado'), ('finished', 'Finalizado'), ('reset', 'Resetado')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cronometro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='painelset.cronometro')),
                ('triggered_by_child', models.ForeignKey(blank=True, help_text='Cronômetro filho que causou este evento', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_events', to='painelset.cronometro')),
            ],
            options={
                'verbose_name': 'Evento de Cronômetro',
                'verbose_name_plural': 'Eventos de Cronômetros',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Individuo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(blank=True, help_text='Função ou papel do indivíduo', max_length=100)),
                ('order', models.PositiveIntegerField(help_text='Ordem do indivíduo no Evento')),
                ('evento', models.ForeignKey(help_text='Evento ao qual este indivíduo pertence', on_delete=django.db.models.deletion.CASCADE, related_name='individuos', to='painelset.evento')),
                ('parlamentar', models.ForeignKey(blank=True, help_text='Parlamentar associado ao indivíduo', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individuos', to='parlamentares.parlamentar')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ParteEvento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration', models.DurationField(help_text='Duração planejada da parte')),
                ('order', models.PositiveIntegerField(help_text='Ordem da parte no Evento')),
                ('evento', models.ForeignKey(help_text='Evento ao qual esta parte pertence', on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='painelset.evento')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
